
# this file defines a pipeline, a set of rules for building and validating the source code in a repo
# it's written in a format called YAML

# trigger defined when the pipeline will run.
# list-of-branches syntax:
# trigger:
# - main

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - azure-pipelines.yml
    - 3-mvc/SimpleOrderApp

# short for "agent pool" as in "build agent"
# i.e.: what set of machines will be the build agents to run these steps.
pool:
  vmImage: ubuntu-latest

# variables common to multiple steps
variables:
  sdkVersion: 3.1.x
  buildConfiguration: Release

# these steps are run in sequence by the build agent,
# in a directory that contains the most recent push on that branch of that repo
# if any step fails, that will halt the build and subsequent steps will not run.

# the two most common types of steps are "script" and "task"
steps:
- task: UseDotNet@2
  displayName: dotnet sdk 2.x
  inputs:
    packageType: 'sdk'
    version: '2.x'

- task: SonarCloudPrepare@1
  displayName: sonar prepare analysis
  inputs:
    SonarCloud: 'sonarcloud-escalonn'
    organization: '2011-nov02-net'
    scannerMode: 'MSBuild'
    projectKey: '2011-nov02-net_trainer-code'
    projectName: 'Simple Order App'

- task: UseDotNet@2
  displayName: dotnet sdk $(sdkVersion)
  inputs:
    packageType: 'sdk'
    version: '$(sdkVersion)'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: dotnet build
  workingDirectory: 3-mvc/SimpleOrderApp

- task: SonarCloudAnalyze@1
  displayName: sonar run analysis

- task: SonarCloudPublish@1
  displayName: sonar analysis publish
  inputs:
    pollingTimeoutSec: '300'

- task: DotNetCoreCLI@2
  displayName: dotnet test
  inputs:
    command: 'test'
    arguments: '--configuration $(buildConfiguration)'
    publishTestResults: true
    workingDirectory: '3-mvc/SimpleOrderApp'

- script: dotnet publish --configuration $(buildConfiguration) --output publish
  displayName: dotnet publish
  workingDirectory: 3-mvc/SimpleOrderApp

- task: AzureRmWebAppDeployment@4
  displayName: azure app service deploy
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Pay-As-You-Go(0518cd5b-d389-4983-9496-cdcae31dcc60)'
    appType: 'webApp'
    WebAppName: '2011-escalona-order-app'
    packageForLinux: '3-mvc/SimpleOrderApp/publish'
