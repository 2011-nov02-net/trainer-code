// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleStore.DataModel.Model;

namespace SimpleStore.DataModel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201120163521_SeedDataAndCheckQuantity")]
    partial class SeedDataAndCheckQuantity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SimpleStore.DataModel.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasCheckConstraint("CK_Location_Stock_Nonnegative", "[Stock] >= 0");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mcdonalds",
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            Name = "Burger King",
                            Stock = 10
                        });
                });

            modelBuilder.Entity("SimpleStore.DataModel.Model.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("Orders");

                    b.HasCheckConstraint("CK_Order_Quantity_Nonnegative", "[Quantity] >= 0");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5e3a0865-04ec-4750-9e0b-f260975c6746"),
                            LocationId = 1,
                            Quantity = 2
                        });
                });

            modelBuilder.Entity("SimpleStore.DataModel.Model.Order", b =>
                {
                    b.HasOne("SimpleStore.DataModel.Model.Location", "Location")
                        .WithMany("Orders")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("SimpleStore.DataModel.Model.Location", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
